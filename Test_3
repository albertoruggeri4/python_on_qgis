# Interrogazione PX - MODIFICA DI TUTTI CSV IN CARTELLA - (Crash)

import gdal
import os 
import csv
import glob

os.chdir("D:/LAB2/Esame/Test1")

def testing (dem, csv_file):
    csvfile_read = open (csv_file)
    reader = csv.DictReader(csvfile_read, delimiter =',')
    
    raster = gdal.Open(dem)
    gt = raster.GetGeoTransform()
    band = raster.GetRasterBand(1)
    arr = band.ReadAsArray()
    print(arr)
    
    lista = []
    for row in reader:
        
        list_row=[]
        
        utm_x = float(row['xcoord']) #float perch+è con dict reader abbiamo valori in str
        utm_y = float(row['ycoord'])
        px = int((utm_x-gt[0])/gt[1]) #al valore di geotrans prende il valore zero che viene sottrratto ad ogni valore del punto)
        py = int((utm_y-gt[3])/gt[5]) #stessa identica cosa qui. Poi gli dico di darmi tutti valori come int
        #print(utm_x,utm_y)
        #print(px,py)
        #da coordinate cartografiche a coordinate all'interno del nostro raster
        #prendere il valore di coordinata definito da questi indici del raster px e py
        
        
        
        ###quota###
        quota = band.ReadAsArray(px,py, 1, 1)#quota è uguale al valore sulla banda, letta come un array, ma con le particolarità di prendere la coord px e py e con estensione 1 e 1
        #se avessi messo 3 e 3 avrebbe preso un gruppo di punti
        #print(quota) #tipologia array che posso trasformare in int
        quota_int = int(quota)
        
        #andiamo a creare la nuova lista
        list_row.append(row['COMUNE'])
        #list_row.append(row['SHAPE_Leng'])
        #list_row.append(row['SHAPE_Area'])
        list_row.append(row['xcoord'])
        list_row.append(row['ycoord'])
        list_row.append(quota_int)
        
        lista.append(list_row)
        print(lista) #la lista di lista
    
    #### CREARE ADESSO IL NUOVO FILE CSV ###
    csv_out = open(csv_file.split('.')[0]+'_quota.csv','w')

    #adesso devo definire i campi
    fields = ['COMUNE', 'xcoord', 'ycoord','quota']
    writer = csv.writer(csv_out)
    writer.writerow(fields)
    writer.writerows(lista)
    
    csv_out.close()
    
    csvfile_read.close()
    raster = None
    
for file in glob.glob('*csv'):
    #output = file.split('.')[0]+'_quota.csv' #divisa in due str al .
    dem='dem_lombardia_100m_ED32N.tif'  
    testing(dem, file)
    #parametri? img saranno tutti i file che finiscono in tif (type strg)

#
